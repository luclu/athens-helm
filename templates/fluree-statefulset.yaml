apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fluree-ledger
  labels:
    {{- include "athens-chart.labels" . | nindent 4 }}
spec:
  serviceName: fluree
  replicas: 1
  selector:
    matchLabels:
      app: fluree
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: fluree
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "athens-chart.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 60
      containers:
        - name: fluree
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.fluree.image.repository }}:{{ .Values.fluree.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ledger
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /fdb/health
              port: ledger
            initialDelaySeconds: 30
          resources:
            {{- toYaml .Values.fluree.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/lib/fluree
            name: fluree-ledger
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: fluree-ledger
      spec:
        {{- include "fluree.storageClassName" . | indent 8 }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "{{ .Values.fluree.storageSize }}"
